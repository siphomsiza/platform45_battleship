describe("Plugin initialization and component basic construction",function(){"use strict";it("loads jquery plugin properly",function(){expect($("<div>").datetimepicker).toBeDefined(),expect(typeof $("<div>").datetimepicker).toEqual("function"),expect($("<div>").datetimepicker.defaults).toBeDefined()}),it("creates the component with default options on an input element",function(){var e=$("<input>");$(document).find("body").append(e),expect(function(){e=e.datetimepicker()}).not.toThrow(),expect(e).not.toBe(null)}),xit("calls destroy when Element that the component is attached is removed",function(){var e,t=$("<div>").attr("class","row").append($("<div>").attr("class","col-md-12").append($("<input>")));$(document).find("body").append(t),t.datetimepicker(),e=t.data("DateTimePicker"),spyOn(e,"destroy").and.callThrough(),t.remove(),expect(e.destroy).toHaveBeenCalled()})}),describe("Public API method tests",function(){"use strict";var t,e,n,i,o,c;beforeEach(function(){n=jasmine.createSpy("dp.change event Spy"),i=jasmine.createSpy("dp.show event Spy"),o=jasmine.createSpy("dp.hide event Spy"),c=jasmine.createSpy("dp.error event Spy"),e=$("<input>").attr("id","dtp"),$(document).find("body").append($("<div>").attr("class","row").append($("<div>").attr("class","col-md-12").append(e))),$(document).find("body").on("dp.change",n),$(document).find("body").on("dp.show",i),$(document).find("body").on("dp.hide",o),$(document).find("body").on("dp.error",c),e.datetimepicker(),t=e.data("DateTimePicker")}),afterEach(function(){t.destroy(),e.remove()}),describe("configuration option name match to public api function",function(){Object.getOwnPropertyNames($.fn.datetimepicker.defaults).forEach(function(e){it("has function "+e+"()",function(){expect(t[e]).toBeDefined()})})}),describe("date() function",function(){describe("typechecking",function(){it("accepts a null",function(){expect(function(){t.date(null)}).not.toThrow()}),it("accepts a string",function(){expect(function(){t.date("2013/05/24")}).not.toThrow()}),it("accepts a Date object",function(){expect(function(){t.date(new Date)}).not.toThrow()}),it("accepts a Moment object",function(){expect(function(){t.date(moment())}).not.toThrow()}),it("does not accept undefined",function(){expect(function(){t.date(undefined)}).toThrow()}),it("does not accept a number",function(){expect(function(){t.date(0)}).toThrow()}),it("does not accept a generic Object",function(){expect(function(){t.date({})}).toThrow()}),it("does not accept a boolean",function(){expect(function(){t.date(!1)}).toThrow()})}),describe("functionality",function(){it("has no date set upon construction",function(){expect(t.date()).toBe(null)}),it("sets the date correctly",function(){var e=moment();t.date(e),expect(t.date().isSame(e)).toBe(!0)})})}),describe("format() function",function(){describe("typechecking",function(){it("accepts a false value",function(){expect(function(){t.format(!1)}).not.toThrow()}),it("accepts a string",function(){expect(function(){t.format("YYYY-MM-DD")}).not.toThrow()}),it("does not accept undefined",function(){expect(function(){t.format(undefined)}).toThrow()}),it("does not accept true",function(){expect(function(){t.format(!0)}).toThrow()}),it("does not accept a generic Object",function(){expect(function(){t.format({})}).toThrow()})}),describe("functionality",function(){it("returns no format before format is set",function(){expect(t.format()).toBe(!1)}),it("sets the format correctly",function(){t.format("YYYY-MM-DD"),expect(t.format()).toBe("YYYY-MM-DD")})})}),describe("destroy() function",function(){describe("existence",function(){it("is defined",function(){expect(t.destroy).toBeDefined()})})}),describe("toggle() function",function(){describe("existence",function(){it("is defined",function(){expect(t.toggle).toBeDefined()})})}),describe("show() function",function(){describe("existence",function(){it("is defined",function(){expect(t.show).toBeDefined()})}),describe("functionality",function(){it("emits a show event when called while widget is hidden",function(){t.show(),expect(i).toHaveBeenCalled()}),it("does not emit a show event when called and widget is already showing",function(){t.hide(),t.show(),i.calls.reset(),t.show(),expect(i).not.toHaveBeenCalled()}),it("actually shows the widget",function(){t.show(),expect($(document).find("body").find(".bootstrap-datetimepicker-widget").length).toEqual(1)})})}),describe("hide() function",function(){describe("existence",function(){it("is defined",function(){expect(t.hide).toBeDefined()})}),describe("functionality",function(){it("emits a hide event when called while widget is shown",function(){t.show(),t.hide(),expect(o).toHaveBeenCalled()}),it("does not emit a hide event when called while widget is hidden",function(){t.hide(),expect(o).not.toHaveBeenCalled()}),it("actually hides the widget",function(){t.show(),t.hide(),expect($(document).find("body").find(".bootstrap-datetimepicker-widget").length).toEqual(0)})})}),describe("disable() function",function(){describe("existence",function(){it("is defined",function(){expect(t.disable).toBeDefined()})})}),describe("enable() function",function(){describe("existence",function(){it("is defined",function(){expect(t.enable).toBeDefined()})})}),describe("options() function",function(){describe("existence",function(){it("is defined",function(){expect(t.options).toBeDefined()})})}),describe("disabledDates() function",function(){describe("existence",function(){it("is defined",function(){expect(t.disabledDates).toBeDefined()})})}),describe("enabledDates() function",function(){describe("existence",function(){it("is defined",function(){expect(t.enabledDates).toBeDefined()})})}),describe("daysOfWeekDisabled() function",function(){describe("existence",function(){it("is defined",function(){expect(t.daysOfWeekDisabled).toBeDefined()})})}),describe("maxDate() function",function(){describe("existence",function(){it("is defined",function(){expect(t.maxDate).toBeDefined()})})}),describe("minDate() function",function(){describe("existence",function(){it("is defined",function(){expect(t.minDate).toBeDefined()})})}),describe("defaultDate() function",function(){describe("existence",function(){it("is defined",function(){expect(t.defaultDate).toBeDefined()})}),describe("functionality",function(){it("returns no defaultDate before defaultDate is set",function(){expect(t.defaultDate()).toBe(!1)}),it("sets the defaultDate correctly",function(){var e=moment();t.defaultDate(e),expect(t.defaultDate().isSame(e)).toBe(!0),expect(t.date().isSame(e)).toBe(!0)}),it("triggers a change event upon setting a default date and input field is empty",function(){t.date(null),t.defaultDate(moment()),expect(n).toHaveBeenCalled()}),it("does not override input value if it already has one",function(){var e=moment();t.date(e),t.defaultDate(moment().year(2e3)),expect(t.date().isSame(e)).toBe(!0)})})}),describe("locale() function",function(){describe("functionality",function(){it("it has the same locale as the global moment locale with default options",function(){expect(t.locale()).toBe(moment.locale())}),it("it switches to a selected locale without affecting global moment locale",function(){t.locale("el"),t.date(moment()),expect(t.locale()).toBe("el"),expect(t.date().locale()).toBe("el"),expect(moment.locale()).toBe("en")})})}),describe("useCurrent() function",function(){describe("existence",function(){it("is defined",function(){expect(t.useCurrent).toBeDefined()})}),describe("check type and parameter validity",function(){it("accepts either a boolean value or string",function(){var e=["year","month","day","hour","minute"];expect(function(){t.useCurrent(!1)}).not.toThrow(),expect(function(){t.useCurrent(!0)}).not.toThrow(),e.forEach(function(e){expect(function(){t.useCurrent(e)}).not.toThrow()}),expect(function(){t.useCurrent("test")}).toThrow(),expect(function(){t.useCurrent({})}).toThrow()})}),describe("functionality",function(){it("triggers a change event upon show() and input field is empty",function(){t.useCurrent(!0),t.show(),expect(n).toHaveBeenCalled()})})}),describe("ignoreReadonly() function",function(){describe("existence",function(){it("is defined",function(){expect(t.ignoreReadonly).toBeDefined()})})}),describe("stepping() function",function(){describe("existence",function(){it("is defined",function(){expect(t.stepping).toBeDefined()})})}),describe("collapse() function",function(){describe("existence",function(){it("is defined",function(){expect(t.collapse).toBeDefined()})})}),describe("icons() function",function(){describe("existence",function(){it("is defined",function(){expect(t.icons).toBeDefined()})})}),describe("useStrict() function",function(){describe("existence",function(){it("is defined",function(){expect(t.useStrict).toBeDefined()})})}),describe("sideBySide() function",function(){describe("existence",function(){it("is defined",function(){expect(t.sideBySide).toBeDefined()})})}),describe("viewMode() function",function(){describe("existence",function(){it("is defined",function(){expect(t.viewMode).toBeDefined()})})}),describe("widgetPositioning() function",function(){describe("existence",function(){it("is defined",function(){expect(t.widgetPositioning).toBeDefined()})})}),describe("calendarWeeks() function",function(){describe("existence",function(){it("is defined",function(){expect(t.calendarWeeks).toBeDefined()})})}),describe("showTodayButton() function",function(){describe("existence",function(){it("is defined",function(){expect(t.showTodayButton).toBeDefined()})})}),describe("showClear() function",function(){describe("existence",function(){it("is defined",function(){expect(t.showClear).toBeDefined()})})}),describe("dayViewHeaderFormat() function",function(){describe("typechecking",function(){it("does not accept a false value",function(){expect(function(){t.dayViewHeaderFormat(!1)}).toThrow()}),it("accepts a string",function(){expect(function(){t.dayViewHeaderFormat("YYYY-MM-DD")}).not.toThrow()}),it("does not accept undefined",function(){expect(function(){t.dayViewHeaderFormat(undefined)}).toThrow()}),it("does not accept true",function(){expect(function(){t.dayViewHeaderFormat(!0)}).toThrow()}),it("does not accept a generic Object",function(){expect(function(){t.dayViewHeaderFormat({})}).toThrow()})}),describe("functionality",function(){it("expects dayViewHeaderFormat to be default of MMMM YYYY",function(){expect(t.dayViewHeaderFormat()).toBe("MMMM YYYY")}),it("sets the dayViewHeaderFormat correctly",function(){t.dayViewHeaderFormat("MM YY"),expect(t.dayViewHeaderFormat()).toBe("MM YY")})})}),describe("extraFormats() function",function(){describe("typechecking",function(){it("accepts a false value",function(){expect(function(){t.extraFormats(!1)}).not.toThrow()}),it("does not accept a string",function(){expect(function(){t.extraFormats("YYYY-MM-DD")}).toThrow()}),it("does not accept undefined",function(){expect(function(){t.extraFormats(undefined)}).toThrow()}),it("does not accept true",function(){expect(function(){t.extraFormats(!0)}).toThrow()}),it("accepts an Array",function(){expect(function(){t.extraFormats(["YYYY-MM-DD"])}).not.toThrow()})}),describe("functionality",function(){it("returns no extraFormats before extraFormats is set",function(){expect(t.extraFormats()).toBe(!1)}),it("sets the extraFormats correctly",function(){t.extraFormats(["YYYY-MM-DD"]),expect(t.extraFormats()[0]).toBe("YYYY-MM-DD")})})}),describe("toolbarPlacement() function",function(){describe("existence",function(){it("is defined",function(){expect(t.toolbarPlacement).toBeDefined()})}),describe("check type and parameter validity",function(){it("does not accept a false value",function(){expect(function(){t.dayViewHeaderFormat(!1)}).toThrow()}),it("does not accept a false value",function(){expect(function(){t.dayViewHeaderFormat(!1)}).toThrow()}),it("accepts a string",function(){["default","top","bottom"].forEach(function(e){expect(function(){t.toolbarPlacement(e)}).not.toThrow()}),expect(function(){t.toolbarPlacement("test")}).toThrow(),expect(function(){t.toolbarPlacement({})}).toThrow()})})}),describe("widgetParent() function",function(){describe("typechecking",function(){it("accepts a null",function(){expect(function(){t.widgetParent(null)}).not.toThrow()}),it("accepts a string",function(){expect(function(){t.widgetParent("testDiv")}).not.toThrow()}),it("accepts a jquery object",function(){expect(function(){t.widgetParent($("#testDiv"))}).not.toThrow()}),it("does not accept undefined",function(){expect(function(){t.widgetParent(undefined)}).toThrow()}),it("does not accept a number",function(){expect(function(){t.widgetParent(0)}).toThrow()}),it("does not accept a generic Object",function(){expect(function(){t.widgetParent({})}).toThrow()}),it("does not accept a boolean",function(){expect(function(){t.widgetParent(!1)}).toThrow()})})}),describe("keepOpen() function",function(){describe("existence",function(){it("is defined",function(){expect(t.keepOpen).toBeDefined()})})}),describe("inline() function",function(){describe("existence",function(){it("is defined",function(){expect(t.inline).toBeDefined()})})}),describe("clear() function",function(){describe("existence",function(){it("is defined",function(){expect(t.clear).toBeDefined()})})}),describe("keyBinds() function",function(){describe("existence",function(){it("is defined",function(){expect(t.keyBinds).toBeDefined()})})}),describe("parseInputDate() function",function(){describe("existence",function(){it("is defined",function(){expect(t.parseInputDate).toBeDefined()})})})});