(function(){describe("Morris.Bar",function(){return describe("when using vertical grid",function(){var r;return r={element:"graph",data:[{x:"foo",y:2,z:3},{x:"bar",y:4,z:6}],xkey:"x",ykeys:["y","z"],labels:["Y","Z"],barColors:["#0b62a4","#7a92a3"],gridLineColor:"#aaa",gridStrokeWidth:.5,gridTextColor:"#888",gridTextSize:12,verticalGridCondition:function(r){return r%2},verticalGridColor:"#888888",verticalGridOpacity:"0.2"},describe("svg structure",function(){return it("should contain extra rectangles for vertical grid",function(){return $("#graph").css("height","250px").css("width","800px"),Morris.Bar($.extend({},r)),$("#graph").find("rect").size().should.equal(6)})}),describe("svg attributes",function(){return it("should have to bars with verticalGrid.color",function(){return Morris.Bar($.extend({},r)),$("#graph").find("rect[fill='"+r.verticalGridColor+"']").size().should.equal(2)}),it("should have to bars with verticalGrid.color",function(){return Morris.Bar($.extend({},r)),$("#graph").find("rect[fill-opacity='"+r.verticalGridOpacity+"']").size().should.equal(2)})})}),describe("svg structure",function(){var r;return r={element:"graph",data:[{x:"foo",y:2,z:3},{x:"bar",y:4,z:6}],xkey:"x",ykeys:["y","z"],labels:["Y","Z"]},it("should contain a rect for each bar",function(){return Morris.Bar($.extend({},r)),$("#graph").find("rect").size().should.equal(4)}),it("should contain 5 grid lines",function(){return Morris.Bar($.extend({},r)),$("#graph").find("path").size().should.equal(5)}),it("should contain 7 text elements",function(){return Morris.Bar($.extend({},r)),$("#graph").find("text").size().should.equal(7)})}),describe("svg attributes",function(){var r;return r={element:"graph",data:[{x:"foo",y:2,z:3},{x:"bar",y:4,z:6}],xkey:"x",ykeys:["y","z"],labels:["Y","Z"],barColors:["#0b62a4","#7a92a3"],gridLineColor:"#aaa",gridStrokeWidth:.5,gridTextColor:"#888",gridTextSize:12},it("should have a bar with the first default color",function(){return Morris.Bar($.extend({},r)),$("#graph").find("rect[fill='#0b62a4']").size().should.equal(2)}),it("should have a bar with no stroke",function(){return Morris.Bar($.extend({},r)),$("#graph").find("rect[stroke='none']").size().should.equal(4)}),it("should have text with configured fill color",function(){return Morris.Bar($.extend({},r)),$("#graph").find("text[fill='#888888']").size().should.equal(7)}),it("should have text with configured font size",function(){return Morris.Bar($.extend({},r)),$("#graph").find("text[font-size='12px']").size().should.equal(7)})}),describe("when setting bar radius",function(){return describe("svg structure",function(){var r;return r={element:"graph",data:[{x:"foo",y:2,z:3},{x:"bar",y:4,z:6}],xkey:"x",ykeys:["y","z"],labels:["Y","Z"],barRadius:[5,5,0,0]},it("should contain a path for each bar",function(){return Morris.Bar($.extend({},r)),$("#graph").find("path").size().should.equal(9)}),it("should use rects if radius is too big",function(){return delete r.barStyle,Morris.Bar($.extend({},r,{barRadius:[300,300,0,0]})),$("#graph").find("rect").size().should.equal(4)})})}),describe("barSize option",function(){return describe("svg attributes",function(){var r;return r={element:"graph",barSize:20,data:[{x:"2011 Q1",y:3,z:2,a:3},{x:"2011 Q2",y:2,z:null,a:1},{x:"2011 Q3",y:0,z:2,a:4},{x:"2011 Q4",y:2,z:4,a:3}],xkey:"x",ykeys:["y","z","a"],labels:["Y","Z","A"]},it("should calc the width if too narrow for barSize",function(){return $("#graph").width("200px"),Morris.Bar($.extend({},r)),$("#graph").find("rect").filter(function(){return parseFloat($(this).attr("width"),10)<10}).size().should.equal(11)}),it("should set width to @options.barSize if possible",function(){return Morris.Bar($.extend({},r)),$("#graph").find("rect[width='"+r.barSize+"']").size().should.equal(11)})})})})}).call(this);