(function(){describe("Morris.Line",function(){return it("should raise an error when the placeholder element is not found",function(){var e;return e=[{x:1,y:1},{x:2,y:2}],function(){return Morris.Line({element:"thisplacedoesnotexist",data:e,xkey:"x",ykeys:["y"],labels:["dontcare"]})}.should["throw"](/Graph container element not found/)}),it("should make point styles customizable",function(){var e,t,r,n;return r=[{x:1,y:1},{x:2,y:2}],n="#ff0000",e="#0000ff",(t=Morris.Line({element:"graph",data:r,xkey:"x",ykeys:["y"],labels:["dontcare"],pointStrokeColors:[n,e],pointStrokeWidths:[1,2],pointFillColors:[null,n]})).pointStrokeWidthForSeries(0).should.equal(1),t.pointStrokeColorForSeries(0).should.equal(n),t.pointStrokeWidthForSeries(1).should.equal(2),t.pointStrokeColorForSeries(1).should.equal(e),t.colorFor(t.data[0],0,"point").should.equal(t.colorFor(t.data[0],0,"line")),t.colorFor(t.data[1],1,"point").should.equal(n)}),describe("generating column labels",function(){return it("should use user-supplied x value strings by default",function(){return Morris.Line({element:"graph",data:[{x:"2012 Q1",y:1},{x:"2012 Q2",y:1}],xkey:"x",ykeys:["y"],labels:["dontcare"]}).data.map(function(e){return e.label}).should===["2012 Q1","2012 Q2"]}),it("should use a default format for timestamp x-values",function(){var e,t;return e=new Date(2012,0,1),t=new Date(2012,0,2),Morris.Line({element:"graph",data:[{x:e.getTime(),y:1},{x:t.getTime(),y:1}],xkey:"x",ykeys:["y"],labels:["dontcare"]}).data.map(function(e){return e.label}).should===[t.toString(),e.toString()]}),it("should use user-defined formatters",function(){var e;return e=new Date(2012,0,1),Morris.Line({element:"graph",data:[{x:e.getTime(),y:1},{x:"2012-01-02",y:1}],xkey:"x",ykeys:["y"],labels:["dontcare"],dateFormat:function(e){var t;return(t=new Date(e)).getYear()+"/"+(t.getMonth()+1)+"/"+t.getDay()}}).data.map(function(e){return e.label}).should===["2012/1/1","2012/1/2"]})}),describe("rendering lines",function(){var e;return beforeEach(function(){return this.defaults={element:"graph",data:[{x:0,y:1,z:0},{x:1,y:0,z:1},{x:2,y:1,z:0},{x:3,y:0,z:1},{x:4,y:1,z:0}],xkey:"x",ykeys:["y","z"],labels:["y","z"],lineColors:["#abcdef","#fedcba"],smooth:!0}}),e=function(e,t){return null==t&&(t="#abcdef"),$("#graph").find("path[stroke='"+t+"']").attr("d").should.match(e)},it("should generate smooth lines when options.smooth is true",function(){return Morris.Line(this.defaults),e(/M[\d\.]+,[\d\.]+(C[\d\.]+(,[\d\.]+){5}){4}/)}),it("should generate jagged lines when options.smooth is false",function(){return Morris.Line($.extend(this.defaults,{smooth:!1})),e(/M[\d\.]+,[\d\.]+(L[\d\.]+,[\d\.]+){4}/)}),it("should generate smooth/jagged lines according to the value for each series when options.smooth is an array",function(){return Morris.Line($.extend(this.defaults,{smooth:["y"]})),e(/M[\d\.]+,[\d\.]+(C[\d\.]+(,[\d\.]+){5}){4}/,"#abcdef"),e(/M[\d\.]+,[\d\.]+(L[\d\.]+,[\d\.]+){4}/,"#fedcba")}),it("should ignore undefined values",function(){return this.defaults.data[2].y=void 0,Morris.Line(this.defaults),e(/M[\d\.]+,[\d\.]+(C[\d\.]+(,[\d\.]+){5}){3}/)}),it("should break the line at null values",function(){return this.defaults.data[2].y=null,Morris.Line(this.defaults),e(/(M[\d\.]+,[\d\.]+C[\d\.]+(,[\d\.]+){5}){2}/)}),it("should make line width customizable",function(){var e;return(e=Morris.Line($.extend(this.defaults,{lineWidth:[1,2]}))).lineWidthForSeries(0).should.equal(1),e.lineWidthForSeries(1).should.equal(2)})}),describe("#createPath",function(){return it("should generate a smooth line",function(){var e;return e=[{x:0,y:10},{x:10,y:0},{x:20,y:10}],Morris.Line.createPath(e,!0,20).should.equal("M0,10C2.5,7.5,7.5,0,10,0C12.5,0,17.5,7.5,20,10")}),it("should generate a jagged line",function(){var e;return e=[{x:0,y:10},{x:10,y:0},{x:20,y:10}],Morris.Line.createPath(e,!1,20).should.equal("M0,10L10,0L20,10")}),it("should prevent paths from descending below the bottom of the chart",function(){var e;return e=[{x:0,y:20},{x:10,y:30},{x:20,y:10}],Morris.Line.createPath(e,!0,30).should.equal("M0,20C2.5,22.5,7.5,30,10,30C12.5,28.75,17.5,15,20,10")}),it("should break the line at null values",function(){var e;return e=[{x:0,y:10},{x:10,y:0},{x:20,y:null},{x:30,y:10},{x:40,y:0}],Morris.Line.createPath(e,!0,20).should.equal("M0,10C2.5,7.5,7.5,2.5,10,0M30,10C32.5,7.5,37.5,2.5,40,0")}),it("should ignore leading and trailing null values",function(){var e;return e=[{x:0,y:null},{x:10,y:10},{x:20,y:0},{x:30,y:10},{x:40,y:null}],Morris.Line.createPath(e,!0,20).should.equal("M10,10C12.5,7.5,17.5,0,20,0C22.5,0,27.5,7.5,30,10")})}),describe("svg structure",function(){var e;return e={element:"graph",data:[{x:"2012 Q1",y:1},{x:"2012 Q2",y:1}],lineColors:["#0b62a4","#7a92a3"],xkey:"x",ykeys:["y"],labels:["dontcare"]},it("should contain a path that represents the line",function(){return Morris.Line($.extend({},e)),$("#graph").find("path[stroke='#0b62a4']").size().should.equal(1)}),it("should contain a circle for each data point",function(){return Morris.Line($.extend({},e)),$("#graph").find("circle").size().should.equal(2)}),it("should contain 5 grid lines",function(){return Morris.Line($.extend({},e)),$("#graph").find("path[stroke='#aaaaaa']").size().should.equal(5)}),it("should contain 9 text elements",function(){return Morris.Line($.extend({},e)),$("#graph").find("text").size().should.equal(9)})}),describe("svg attributes",function(){var e;return e={element:"graph",data:[{x:"2012 Q1",y:1},{x:"2012 Q2",y:1}],xkey:"x",ykeys:["y","z"],labels:["Y","Z"],lineColors:["#0b62a4","#7a92a3"],lineWidth:3,pointStrokeWidths:[5],pointStrokeColors:["#ffffff"],gridLineColor:"#aaa",gridStrokeWidth:.5,gridTextColor:"#888",gridTextSize:12,pointSize:[5]},it("should have circles with configured fill color",function(){return Morris.Line($.extend({},e)),$("#graph").find("circle[fill='#0b62a4']").size().should.equal(2)}),it("should have circles with configured stroke width",function(){return Morris.Line($.extend({},e)),$("#graph").find("circle[stroke-width='5']").size().should.equal(2)}),it("should have circles with configured stroke color",function(){return Morris.Line($.extend({},e)),$("#graph").find("circle[stroke='#ffffff']").size().should.equal(2)}),it("should have line with configured line width",function(){return Morris.Line($.extend({},e)),$("#graph").find("path[stroke-width='3']").size().should.equal(1)}),it("should have text with configured font size",function(){return Morris.Line($.extend({},e)),$("#graph").find("text[font-size='12px']").size().should.equal(9)}),it("should have text with configured font size",function(){return Morris.Line($.extend({},e)),$("#graph").find("text[fill='#888888']").size().should.equal(9)}),it("should have circle with configured size",function(){return Morris.Line($.extend({},e)),$("#graph").find("circle[r='5']").size().should.equal(2)})})})}).call(this);