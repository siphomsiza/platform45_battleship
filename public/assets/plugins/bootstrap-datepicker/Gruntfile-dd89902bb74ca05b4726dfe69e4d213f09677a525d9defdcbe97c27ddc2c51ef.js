module.exports=function(c){require("load-grunt-tasks")(c),c.initConfig({pkg:c.file.readJSON("package.json"),qunit:{all:["tests/tests.html"]},jshint:{options:{jshintrc:!0},gruntfile:["Gruntfile.js"],main:["js/bootstrap-datepicker.js"],locales:["js/locales/*js"]},jscs:{gruntfile:["Gruntfile.js"],main:["js/bootstrap-datepicker.js"],locales:["js/locales/*js"]},less:{standalone:{files:{"_build/datepicker.standalone.css":"build/build_standalone.less","_build/datepicker3.standalone.css":"build/build_standalone3.less"}},css:{files:{"_build/datepicker.css":"build/build.less","_build/datepicker3.css":"build/build3.less"}},repo:{files:{"css/datepicker.css":"build/build_standalone.less","css/datepicker3.css":"build/build_standalone3.less"}}},uglify:{options:{compress:!0,mangle:!0},main:{options:{sourceMap:function(s){return s.replace(".min.js",".js.map")}},files:{"_build/bootstrap-datepicker.min.js":"js/bootstrap-datepicker.js","_build/bootstrap-datepicker.locales.min.js":"js/locales/*.js"}},locales:{files:[{expand:!0,cwd:"js/locales/",src:["*.js","!*.min.js"],dest:"_build/locales/",rename:function(s,e){return s+e.replace(/\.js$/,".min.js")}}]}},cssmin:{all:{files:{"_build/datepicker.standalone.min.css":"_build/datepicker.standalone.css","_build/datepicker.min.css":"_build/datepicker.css","_build/datepicker3.standalone.min.css":"_build/datepicker3.standalone.css","_build/datepicker3.min.css":"_build/datepicker3.css"}}},clean:["_build"]}),c.registerTask("lint","Lint all js files with jshint and jscs",["jshint","jscs"]),c.registerTask("test","Lint files and run unit tests",["lint","qunit"]),c.registerTask("finish","Prepares repo for commit [test, less:repo, screenshots]",["test","less:repo","screenshots"]),c.registerTask("dist","Builds minified files",["less:css","less:standalone","cssmin","uglify"]),c.registerTask("screenshots","Rebuilds automated docs screenshots",function(){var n=require("phantomjs").path;c.file.recurse("docs/_static/screenshots/",function(s){c.file["delete"](s)}),c.file.recurse("docs/_screenshots/",function(s,e,i,t){if(/.html$/.test(t)){var l="docs/_static/screenshots/"+(i=i||""),a=l+t.replace(/.html$/,".png");c.file.exists(l)||c.file.mkdir(l),c.util.spawn({cmd:n,args:["docs/_screenshots/script/screenshot.js",s,a]})}})})};