describe("Timepicker feature",function(){"use strict";var e,t,i,o,n,c,r,d,m;beforeEach(function(){loadFixtures("timepicker.html"),e=$("#timepicker1"),o=e.timepicker(),r=o.data("timepicker"),t=$("#timepicker2"),n=t.timepicker({template:"modal",showSeconds:!0,minuteStep:30,secondStep:30,defaultTime:!1}),d=n.data("timepicker"),i=$("#timepicker3"),c=i.timepicker({showMeridian:!1,showSeconds:!0,defaultTime:"13:25:15"}),m=c.data("timepicker")}),afterEach(function(){void 0!==e.data("timepicker")&&e.data("timepicker").remove(),void 0!==t.data("timepicker")&&t.data("timepicker").remove(),void 0!==i.data("timepicker")&&i.data("timepicker").remove(),e.remove(),t.remove(),i.remove()}),it("should be available on the jquery object",function(){expect($.fn.timepicker).toBeDefined()}),it("should be chainable",function(){expect(o).toBe(e)}),it("should have sensible defaults",function(){expect(r.defaultTime).toBeTruthy(),expect(r.minuteStep).toBe(15),expect(r.secondStep).toBe(15),expect(r.disableFocus).toBe(!1),expect(r.showSeconds).toBe(!1),expect(r.showInputs).toBe(!0),expect(r.showMeridian).toBe(!0),expect(r.template).toBe("dropdown"),expect(r.modalBackdrop).toBe(!1),expect(r.modalBackdrop).toBe(!1),expect(r.isOpen).toBe(!1)}),it("should allow user to configure defaults",function(){expect(d.template).toBe("modal"),expect(d.minuteStep).toBe(30)}),it("should be configurable with data attributes",function(){$("body").append('<div id="hi" class="bootstrap-timepicker"><input id="customTimepicker" data-template="modal" data-minute-step="30" data-modal-backdrop="true" data-show-meridian="true" type="text"/></div');var e=$("body").find("#customTimepicker"),t=e.timepicker().data("timepicker");expect($("body").find("#customTimepicker").length).toBe(1),expect(t.template).toBe("modal"),expect(t.minuteStep).toBe(30,"data-minute-step not working"),expect(t.modalBackdrop).toBe(!0,"data-modal-backdrop not working"),expect(t.showMeridian).toBe(!0,"data-show-meridian not working"),t.remove()}),it("should have current time by default",function(){var e=new Date,t=e.getHours(),i=Math.floor(e.getMinutes()/r.minuteStep)*r.minuteStep;t>12&&(t-=12),expect(r.hour).toBe(t),expect(r.minute).toBe(i)}),it("should not override time with current time if value is already set",function(){$("body").append('<div id="timepickerCustom"><input id="timepickerCustomInput" type="text" value="12:15 AM" /></div>');var e=$("#timepickerCustomInput").timepicker(),t=e.data("timepicker");expect(e.val()).toBe("12:15 AM"),t.remove(),$("#timepickerCustom").remove()}),it("should have no value if defaultTime is set to false",function(){expect(t.val()).toBe("")}),it("should be able to set default time with config option",function(){expect(m.getTime()).toBe("13:25:15")}),it("should update the element and widget with the setTime method",function(){d.setTime("09:15:20 AM"),expect(d.hour).toBe(9),expect(d.minute).toBe(15),expect(d.second).toBe(20),expect(d.meridian).toBe("AM"),expect(t.val()).toBe("09:15:20 AM"),expect(d.$widget.find(".bootstrap-timepicker-hour").val()).toBe("09"),expect(d.$widget.find(".bootstrap-timepicker-minute").val()).toBe("15"),expect(d.$widget.find(".bootstrap-timepicker-second").val()).toBe("20"),expect(d.$widget.find(".bootstrap-timepicker-meridian").val()).toBe("AM")}),it("should be able to format time values into a string",function(){expect(d.formatTime(3,15,45,"PM")).toBe("03:15:45 PM")}),it("should be able get & set the pickers time",function(){m.setTime("23:15:20"),expect(m.getTime()).toBe("23:15:20")}),it("should update picker on blur",function(){e.val("10:25 AM"),expect(r.getTime()).not.toBe("10:25 AM"),e.trigger("blur"),expect(r.getTime()).toBe("10:25 AM")}),it("should update element with updateElement method",function(){r.hour=10,r.minute=30,r.meridian="PM",r.updateElement(),expect(e.val()).toBe("10:30 PM")}),it("should update widget with updateWidget method",function(){d.hour=10,d.minute=30,d.second=15,expect(d.$widget.find(".bootstrap-timepicker-hour").val()).not.toBe("10"),expect(d.$widget.find(".bootstrap-timepicker-minute").val()).not.toBe("30"),expect(d.$widget.find(".bootstrap-timepicker-second").val()).not.toBe("15"),d.updateWidget(),expect(d.$widget.find(".bootstrap-timepicker-hour").val()).toBe("10"),expect(d.$widget.find(".bootstrap-timepicker-minute").val()).toBe("30"),expect(d.$widget.find(".bootstrap-timepicker-second").val()).toBe("15")}),it("should update picker with updateFromElementVal method",function(){r.hour=12,r.minute=12,r.meridian="PM",r.update(),e.val("10:30 AM"),expect(r.$widget.find(".bootstrap-timepicker-hour").val()).not.toBe("10"),expect(r.$widget.find(".bootstrap-timepicker-minute").val()).not.toBe("30"),expect(r.$widget.find(".bootstrap-timepicker-meridian").val()).not.toBe("AM"),expect(r.hour).not.toBe(10),expect(r.minute).not.toBe(30),expect(r.meridian).not.toBe("AM"),r.updateFromElementVal(),expect(r.$widget.find(".bootstrap-timepicker-hour").val()).toBe("10"),expect(r.$widget.find(".bootstrap-timepicker-minute").val()).toBe("30"),expect(r.$widget.find(".bootstrap-timepicker-meridian").val()).toBe("AM"),expect(r.hour).toBe(10),expect(r.minute).toBe(30),expect(r.meridian).toBe("AM")}),it("should update picker with updateFromWidgetInputs method",function(){r.hour=12,r.minute=12,r.meridian="PM",r.update(),r.$widget.find(".bootstrap-timepicker-hour").val(10),r.$widget.find(".bootstrap-timepicker-minute").val(30),r.$widget.find(".bootstrap-timepicker-meridian").val("AM"),expect(r.hour).not.toBe(10),expect(r.minute).not.toBe(30),expect(r.meridian).not.toBe("AM"),expect(e.val()).not.toBe("10:30 AM"),r.updateFromWidgetInputs(),expect(r.hour).toBe(10),expect(r.minute).toBe(30),expect(r.meridian).toBe("AM"),expect(e.val()).toBe("10:30 AM")}),it("should increment hours with incrementHour method",function(){r.hour=9,r.incrementHour(),expect(r.hour).toBe(10)}),it("should decrement hours with decrementHour method",function(){r.hour=9,r.decrementHour(),expect(r.hour).toBe(8)}),it("should toggle meridian if hour goes past 12",function(){e.val("11:00 AM"),r.updateFromElementVal(),r.incrementHour(),expect(r.hour).toBe(12),expect(r.minute).toBe(0),expect(r.meridian).toBe("PM")}),it("should toggle meridian if hour goes below 1",function(){e.val("11:00 AM"),r.updateFromElementVal(),r.incrementHour(),expect(r.hour).toBe(12),expect(r.minute).toBe(0),expect(r.meridian).toBe("PM")}),it("should set hour to 1 if hour increments on 12 for 12h clock",function(){e.val("11:15 PM"),r.updateFromElementVal(),r.incrementHour(),r.incrementHour(),expect(r.getTime()).toBe("01:15 AM")}),it("should set hour to 0 if hour increments on 23 for 24h clock",function(){i.val("22:15:30"),m.updateFromElementVal(),m.incrementHour(),m.incrementHour(),expect(m.hour).toBe(0),expect(m.minute).toBe(15),expect(m.second).toBe(30)}),it("should increment minutes with incrementMinute method",function(){r.minute=10,r.incrementMinute(),expect(r.minute).toBe(15),d.minute=0,d.incrementMinute(),expect(d.minute).toBe(30)}),it("should decrement minutes with decrementMinute method",function(){r.hour=11,r.minute=0,r.decrementMinute(),expect(r.hour).toBe(10),expect(r.minute).toBe(45),d.hour=11,d.minute=0,d.decrementMinute(),expect(d.hour).toBe(10),expect(d.minute).toBe(30)}),it("should increment hour if minutes increment past 59",function(){e.val("11:55 AM"),r.updateFromElementVal(),r.incrementMinute(),r.update(),expect(r.getTime()).toBe("12:00 PM")}),it("should toggle meridian with toggleMeridian method",function(){r.meridian="PM",r.toggleMeridian(),expect(r.meridian).toBe("AM")}),it("should increment seconds with incrementSecond method",function(){r.second=0,r.incrementSecond(),expect(r.second).toBe(15),d.second=0,d.incrementSecond(),expect(d.second).toBe(30)}),it("should decrement seconds with decrementSecond method",function(){d.hour=11,d.minute=0,d.second=0,d.decrementSecond(),expect(d.minute).toBe(59),expect(d.second).toBe(30)}),it("should increment minute by 1 if seconds increment past 59",function(){t.val("11:55:30 AM"),d.updateFromElementVal(),d.incrementSecond(),d.update(),expect(d.getTime()).toBe("11:56:00 AM")}),it("should not have any remaining events if remove is called",function(){var t=0;e.on("hide.timepicker",function(){t++}),e.parents("div").find(".add-on").trigger("click"),$("body").trigger("mousedown"),expect(t).toBe(1),r.remove(),d.remove(),m.remove(),$("body").trigger("click"),expect(t).toBe(1)}),it("should not have the widget in the DOM if remove method is called",function(){expect($("body")).toContain(".bootstrap-timepicker-widget"),r.remove(),d.remove(),m.remove(),expect($("body")).not.toContain(".bootstrap-timepicker-widget")}),it("should be able to set time from a script",function(){e.timepicker("setTime","12:35 PM"),r.update(),expect(r.getTime()).toBe("12:35 PM")}),it("should be able to opened from script",function(){expect(r.isOpen).toBe(!1),e.timepicker("showWidget"),expect(r.isOpen).toBe(!0)})});