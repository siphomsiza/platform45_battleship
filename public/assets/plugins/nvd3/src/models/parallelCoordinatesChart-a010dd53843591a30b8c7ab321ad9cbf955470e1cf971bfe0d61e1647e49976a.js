nv.models.parallelCoordinatesChart=function(){"use strict";function t(i){return v.reset(),v.models(n),i.each(function(i){var s=d3.select(this);nv.utils.initSVG(s);var h=nv.utils.availableWidth(r,s,o),v=nv.utils.availableHeight(a,s,o);t.update=function(){s.call(t)},t.container=this,u.setter(b(d),t.update).getter(m(d)).update(),u.disabled=d.map(function(t){return!!t.disabled}),d=d.map(function(t){return t.disabled=!!t.disabled,t}),d.forEach(function(t,n){t.originalPosition=isNaN(t.originalPosition)?n:t.originalPosition,t.currentPosition=isNaN(t.currentPosition)?n:t.currentPosition});var P=c.map(function(t){return t.key}),C=d.map(function(t){return t.key});if(d.forEach(function(t,n){var e=P.indexOf(t.key);if(0>e)c.splice(n,0,t);else{var i=c[e].currentPosition-c[e].originalPosition;c[e].originalPosition=t.originalPosition,c[e].currentPosition=t.originalPosition+i}}),c=c.filter(function(t){return C.indexOf(t.key)>=0}),!p){var E;p={};for(E in u)u[E]instanceof Array?p[E]=u[E].slice(0):p[E]=u[E]}if(!i||!i.length)return nv.utils.noData(t,s),t;s.selectAll(".nv-noData").remove();var y=s.selectAll("g.nv-wrap.nv-parallelCoordinatesChart").data([i]),O=y.enter().append("g").attr("class","nvd3 nv-wrap nv-parallelCoordinatesChart").append("g"),w=y.select("g");O.append("g").attr("class","nv-parallelCoordinatesWrap"),O.append("g").attr("class","nv-legendWrap"),w.select("rect").attr("width",h).attr("height",v>0?v:0),l&&(e.width(h).color(function(){return"rgb(188,190,192)"}),w.select(".nv-legendWrap").datum(c.sort(function(t,n){return t.originalPosition-n.originalPosition})).call(e),o.top!=e.height()&&(o.top=e.height(),v=nv.utils.availableHeight(a,s,o)),y.select(".nv-legendWrap").attr("transform","translate( 0 ,"+-o.top+")")),y.attr("transform","translate("+o.left+","+o.top+")"),n.width(h).height(v).dimensionData(c).displayBrush(f);var W=w.select(".nv-parallelCoordinatesWrap ").datum(i);W.transition().call(n),n.dispatch.on("brushEnd",function(t,n){n?(f=!0,g.brushEnd(t)):f=!1}),e.dispatch.on("stateChange",function(n){for(var e in n)u[e]=n[e];g.stateChange(u),t.update()}),n.dispatch.on("dimensionsOrder",function(){c.sort(function(t,n){return t.currentPosition-n.currentPosition});var t=!1;c.forEach(function(n,e){n.currentPosition=e,n.currentPosition!==n.originalPosition&&(t=!0)}),g.dimensionsOrder(c,t)}),g.on("changeState",function(n){"undefined"!=typeof n.disabled&&(c.forEach(function(t,e){t.disabled=n.disabled[e]}),u.disabled=n.disabled),t.update()})}),v.renderEnd("parraleleCoordinateChart immediate"),t}var n=nv.models.parallelCoordinates(),e=nv.models.legend(),i=nv.models.tooltip(),o=(nv.models.tooltip(),{top:0,right:0,bottom:0,left:0}),r=null,a=null,l=!0,s=nv.utils.defaultColor(),u=nv.utils.state(),d=[],c=[],f=!0,p=null,h=null,g=d3.dispatch("dimensionsOrder","brushEnd","stateChange","changeState","renderEnd"),v=nv.utils.renderWatch(g),m=function(t){return function(){return{active:t.map(function(t){return!t.disabled})}}},b=function(t){return function(n){void 0!==n.active&&t.forEach(function(t,e){t.disabled=!n.active[e]})}};return n.dispatch.on("elementMouseover.tooltip",function(t){t.series={key:t.label,color:t.color},i.data(t).hidden(!1)}),n.dispatch.on("elementMouseout.tooltip",function(){i.hidden(!0)}),n.dispatch.on("elementMousemove.tooltip",function(){i()}),t.dispatch=g,t.parallelCoordinates=n,t.legend=e,t.tooltip=i,t.options=nv.utils.optionsFunc.bind(t),t._options=Object.create({},{width:{get:function(){return r},set:function(t){r=t}},height:{get:function(){return a},set:function(t){a=t}},showLegend:{get:function(){return l},set:function(t){l=t}},defaultState:{get:function(){return p},set:function(t){p=t}},dimensionData:{get:function(){return d},set:function(t){d=t}},displayBrush:{get:function(){return f},set:function(t){f=t}},noData:{get:function(){return h},set:function(t){h=t}},margin:{get:function(){return o},set:function(t){o.top=void 0!==t.top?t.top:o.top,o.right=void 0!==t.right?t.right:o.right,o.bottom=void 0!==t.bottom?t.bottom:o.bottom,o.left=void 0!==t.left?t.left:o.left}},color:{get:function(){return s},set:function(t){s=nv.utils.getColor(t),e.color(s),n.color(s)}}}),nv.utils.inheritOptions(t,n),nv.utils.initOptions(t),t};