nv.models.parallelCoordinatesChart=function(){"use strict";function d(t){return o.reset(),o.models(c),t.each(function(t){var n=d3.select(this);nv.utils.initSVG(n);var e=nv.utils.availableWidth(h,n,p),i=nv.utils.availableHeight(g,n,p);d.update=function(){n.call(d)},d.container=this,m.setter(w(b),d.update).getter(O(b)).update(),m.disabled=b.map(function(t){return!!t.disabled}),(b=b.map(function(t){return t.disabled=!!t.disabled,t})).forEach(function(t,n){t.originalPosition=isNaN(t.originalPosition)?n:t.originalPosition,t.currentPosition=isNaN(t.currentPosition)?n:t.currentPosition});var o,r=P.map(function(t){return t.key}),a=b.map(function(t){return t.key});if(b.forEach(function(t,n){var e=r.indexOf(t.key);if(e<0)P.splice(n,0,t);else{var i=P[e].currentPosition-P[e].originalPosition;P[e].originalPosition=t.originalPosition,P[e].currentPosition=t.originalPosition+i}}),P=P.filter(function(t){return 0<=a.indexOf(t.key)}),!E)for(o in E={},m)m[o]instanceof Array?E[o]=m[o].slice(0):E[o]=m[o];if(!t||!t.length)return nv.utils.noData(d,n),d;n.selectAll(".nv-noData").remove();var l=n.selectAll("g.nv-wrap.nv-parallelCoordinatesChart").data([t]),s=l.enter().append("g").attr("class","nvd3 nv-wrap nv-parallelCoordinatesChart").append("g"),u=l.select("g");s.append("g").attr("class","nv-parallelCoordinatesWrap"),s.append("g").attr("class","nv-legendWrap"),u.select("rect").attr("width",e).attr("height",0<i?i:0),v&&(f.width(e).color(function(){return"rgb(188,190,192)"}),u.select(".nv-legendWrap").datum(P.sort(function(t,n){return t.originalPosition-n.originalPosition})).call(f),p.top!=f.height()&&(p.top=f.height(),i=nv.utils.availableHeight(g,n,p)),l.select(".nv-legendWrap").attr("transform","translate( 0 ,"+-p.top+")")),l.attr("transform","translate("+p.left+","+p.top+")"),c.width(e).height(i).dimensionData(P).displayBrush(C),u.select(".nv-parallelCoordinatesWrap ").datum(t).transition().call(c),c.dispatch.on("brushEnd",function(t,n){n?(C=!0,y.brushEnd(t)):C=!1}),f.dispatch.on("stateChange",function(t){for(var n in t)m[n]=t[n];y.stateChange(m),d.update()}),c.dispatch.on("dimensionsOrder",function(){P.sort(function(t,n){return t.currentPosition-n.currentPosition});var e=!1;P.forEach(function(t,n){t.currentPosition=n,t.currentPosition!==t.originalPosition&&(e=!0)}),y.dimensionsOrder(P,e)}),y.on("changeState",function(e){"undefined"!=typeof e.disabled&&(P.forEach(function(t,n){t.disabled=e.disabled[n]}),m.disabled=e.disabled),d.update()})}),o.renderEnd("parraleleCoordinateChart immediate"),d}var c=nv.models.parallelCoordinates(),f=nv.models.legend(),n=nv.models.tooltip(),p=(nv.models.tooltip(),{top:0,right:0,bottom:0,left:0}),h=null,g=null,v=!0,e=nv.utils.defaultColor(),m=nv.utils.state(),b=[],P=[],C=!0,E=null,i=null,y=d3.dispatch("dimensionsOrder","brushEnd","stateChange","changeState","renderEnd"),o=nv.utils.renderWatch(y),O=function(t){return function(){return{active:t.map(function(t){return!t.disabled})}}},w=function(t){return function(e){e.active!==undefined&&t.forEach(function(t,n){t.disabled=!e.active[n]})}};return c.dispatch.on("elementMouseover.tooltip",function(t){t.series={key:t.label,color:t.color},n.data(t).hidden(!1)}),c.dispatch.on("elementMouseout.tooltip",function(){n.hidden(!0)}),c.dispatch.on("elementMousemove.tooltip",function(){n()}),d.dispatch=y,d.parallelCoordinates=c,d.legend=f,d.tooltip=n,d.options=nv.utils.optionsFunc.bind(d),d._options=Object.create({},{width:{get:function(){return h},set:function(t){h=t}},height:{get:function(){return g},set:function(t){g=t}},showLegend:{get:function(){return v},set:function(t){v=t}},defaultState:{get:function(){return E},set:function(t){E=t}},dimensionData:{get:function(){return b},set:function(t){b=t}},displayBrush:{get:function(){return C},set:function(t){C=t}},noData:{get:function(){return i},set:function(t){i=t}},margin:{get:function(){return p},set:function(t){p.top=t.top!==undefined?t.top:p.top,p.right=t.right!==undefined?t.right:p.right,p.bottom=t.bottom!==undefined?t.bottom:p.bottom,p.left=t.left!==undefined?t.left:p.left}},color:{get:function(){return e},set:function(t){e=nv.utils.getColor(t),f.color(e),c.color(e)}}}),nv.utils.inheritOptions(d,c),nv.utils.initOptions(d),d};